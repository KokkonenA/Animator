[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\User1\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\User1\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.7 (AdoptOpenJDK Java 11.0.10)
[debug]       Load.loadUnit: plugins took 280.6676ms
[debug]       Load.loadUnit: defsScala took 3.4264ms
[debug] [Loading] Scanning directory C:\Users\User1\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\User1\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 56.1203 ms
[debug]           Load.resolveProject(global-plugins) took 471.3463ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\User1\.sbt\1.0\plugins, plugins: List(<none>))) took 547.4276ms
[debug] [Loading] Done in C:\Users\User1\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 576.2234ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2815ms
[debug]     Load.loadUnit(file:/C:/Users/User1/.sbt/1.0/plugins/, ...) took 914.6451ms
[debug]   Load.apply: load took 1480.1643ms
[debug]   Load.apply: resolveProjects took 26.8018ms
[debug]   Load.apply: finalTransforms took 300.1865ms
[debug]   Load.apply: config.delegates took 12.8601ms
[debug]   Load.apply: Def.make(settings)... took 3639.0262ms
[debug]   Load.apply: structureIndex took 916.3679ms
[debug]   Load.apply: mkStreams took 1.9983ms
[info] loading global plugins from C:\Users\User1\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 12110.0537ms
[debug]           Load.loadUnit: plugins took 24.2713ms
[debug]           Load.loadUnit: defsScala took 0.0054ms
[debug] [Loading] Scanning directory C:\Users\User1\IdeaProjects\OS2 animator\project
[debug]             Load.loadUnit: mkEval took 4.0615ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\User1\IdeaProjects\OS2 animator\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.7982 ms
[info] loading settings for project os2-animator-build from idea.sbt ...
[debug]               Load.resolveProject(os2-animator-build) took 4.6192ms
[debug]             Load.loadTransitive: finalizeProject(Project(id os2-animator-build, base: C:\Users\User1\IdeaProjects\OS2 animator\project, plugins: List(<none>))) took 9.1739ms
[debug] [Loading] Done in C:\Users\User1\IdeaProjects\OS2 animator\project, returning: (os2-animator-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 403.2083ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.1239ms
[debug]         Load.loadUnit(file:/C:/Users/User1/IdeaProjects/OS2%20animator/project/, ...) took 432.6612ms
[debug]       Load.apply: load took 436.0232ms
[debug]       Load.apply: resolveProjects took 0.1567ms
[debug]       Load.apply: finalTransforms took 26.4924ms
[debug]       Load.apply: config.delegates took 1.2344ms
[debug]       Load.apply: Def.make(settings)... took 176.6934ms
[debug]       Load.apply: structureIndex took 57.1886ms
[debug]       Load.apply: mkStreams took 0.0031ms
[info] loading project definition from C:\Users\User1\IdeaProjects\OS2 animator\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 2960.9025ms
[debug]     Load.loadUnit: defsScala took 0.0159ms
[debug] [Loading] Scanning directory C:\Users\User1\IdeaProjects\OS2 animator
[debug]       Load.loadUnit: mkEval took 0.3019ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\User1\IdeaProjects\OS2 animator, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 4.5078 ms
[info] loading settings for project os2-animator from build.sbt ...
[debug]         Load.resolveProject(os2-animator) took 49.7965ms
[debug]       Load.loadTransitive: finalizeProject(Project(id os2-animator, base: C:\Users\User1\IdeaProjects\OS2 animator, plugins: List(<none>))) took 59.5079ms
[debug] [Loading] Done in C:\Users\User1\IdeaProjects\OS2 animator, returning: (os2-animator)
[debug]     Load.loadUnit: loadedProjectsRaw took 7732.7743ms
[debug]     Load.loadUnit: cleanEvalClasses took 18.6049ms
[debug]   Load.loadUnit(file:/C:/Users/User1/IdeaProjects/OS2%20animator/, ...) took 10714.7908ms
[debug] Load.apply: load took 10718.4593ms
[debug] Load.apply: resolveProjects took 0.1533ms
[debug] Load.apply: finalTransforms took 39.3689ms
[debug] Load.apply: config.delegates took 0.8832ms
[debug] Load.apply: Def.make(settings)... took 1635.8287ms
[debug] Load.apply: structureIndex took 40.8655ms
[debug] Load.apply: mkStreams took 0.0027ms
[info] set current project to OS2 animator (in build file:/C:/Users/User1/IdeaProjects/OS2%20animator/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 53677 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 53677, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to OS2 animator (in build file:/C:/Users/User1/IdeaProjects/OS2%20animator/)
[debug] > Exec(idea-shell, None, None)
