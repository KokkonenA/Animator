[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\User1\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\User1\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.7 (AdoptOpenJDK Java 11.0.10)
[debug]       Load.loadUnit: plugins took 101.8298ms
[debug]       Load.loadUnit: defsScala took 0.2195ms
[debug] [Loading] Scanning directory C:\Users\User1\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\User1\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 40.8821 ms
[debug]           Load.resolveProject(global-plugins) took 69.2957ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\User1\.sbt\1.0\plugins, plugins: List(<none>))) took 134.7733ms
[debug] [Loading] Done in C:\Users\User1\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 171.4828ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2259ms
[debug]     Load.loadUnit(file:/C:/Users/User1/.sbt/1.0/plugins/, ...) took 281.3707ms
[debug]   Load.apply: load took 597.4467ms
[debug]   Load.apply: resolveProjects took 8.139ms
[debug]   Load.apply: finalTransforms took 159.8513ms
[debug]   Load.apply: config.delegates took 7.7361ms
[debug]   Load.apply: Def.make(settings)... took 2677.3184ms
[debug]   Load.apply: structureIndex took 270.8416ms
[debug]   Load.apply: mkStreams took 1.9897ms
[info] loading global plugins from C:\Users\User1\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 6912.1295ms
[debug]           Load.loadUnit: plugins took 33.7491ms
[debug]           Load.loadUnit: defsScala took 0.0149ms
[debug] [Loading] Scanning directory C:\Users\User1\IdeaProjects\OS2 animator\project
[debug]             Load.loadUnit: mkEval took 5.0037ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\User1\IdeaProjects\OS2 animator\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.7299 ms
[info] loading settings for project os2-animator-build from idea.sbt ...
[debug]               Load.resolveProject(os2-animator-build) took 27.6832ms
[debug]             Load.loadTransitive: finalizeProject(Project(id os2-animator-build, base: C:\Users\User1\IdeaProjects\OS2 animator\project, plugins: List(<none>))) took 31.1665ms
[debug] [Loading] Done in C:\Users\User1\IdeaProjects\OS2 animator\project, returning: (os2-animator-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 298.3196ms
[debug]           Load.loadUnit: cleanEvalClasses took 7.7438ms
[debug]         Load.loadUnit(file:/C:/Users/User1/IdeaProjects/OS2%20animator/project/, ...) took 341.2181ms
[debug]       Load.apply: load took 343.8063ms
[debug]       Load.apply: resolveProjects took 0.1057ms
[debug]       Load.apply: finalTransforms took 39.8011ms
[debug]       Load.apply: config.delegates took 0.8191ms
[debug]       Load.apply: Def.make(settings)... took 229.3605ms
[debug]       Load.apply: structureIndex took 74.0144ms
[debug]       Load.apply: mkStreams took 0.0036ms
[info] loading project definition from C:\Users\User1\IdeaProjects\OS2 animator\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 2652.2272ms
[debug]     Load.loadUnit: defsScala took 0.0053ms
[debug] [Loading] Scanning directory C:\Users\User1\IdeaProjects\OS2 animator
[debug]       Load.loadUnit: mkEval took 0.2714ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\User1\IdeaProjects\OS2 animator, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 4.6037 ms
[info] loading settings for project os2-animator from build.sbt ...
[debug]         Load.resolveProject(os2-animator) took 34.1327ms
[debug]       Load.loadTransitive: finalizeProject(Project(id os2-animator, base: C:\Users\User1\IdeaProjects\OS2 animator, plugins: List(<none>))) took 40.4418ms
[debug] [Loading] Done in C:\Users\User1\IdeaProjects\OS2 animator, returning: (os2-animator)
[debug]     Load.loadUnit: loadedProjectsRaw took 8983.9664ms
[debug]     Load.loadUnit: cleanEvalClasses took 36.1307ms
[debug]   Load.loadUnit(file:/C:/Users/User1/IdeaProjects/OS2%20animator/, ...) took 11673.0882ms
[debug] Load.apply: load took 11675.5884ms
[debug] Load.apply: resolveProjects took 0.1153ms
[debug] Load.apply: finalTransforms took 59.9988ms
[debug] Load.apply: config.delegates took 0.3588ms
[debug] Load.apply: Def.make(settings)... took 261.9577ms
[debug] Load.apply: structureIndex took 48.1787ms
[debug] Load.apply: mkStreams took 0.0025ms
[info] set current project to OS2 animator (in build file:/C:/Users/User1/IdeaProjects/OS2%20animator/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 51042 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 51042, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to OS2 animator (in build file:/C:/Users/User1/IdeaProjects/OS2%20animator/)
[debug] > Exec(idea-shell, None, None)
