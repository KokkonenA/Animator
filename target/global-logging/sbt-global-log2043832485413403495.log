[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\User1\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\User1\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.7 (Oracle Corporation Java 15.0.2)
[debug]       Load.loadUnit: plugins took 182.7752ms
[debug]       Load.loadUnit: defsScala took 0.3378ms
[debug] [Loading] Scanning directory C:\Users\User1\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\User1\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 27.0128 ms
[debug]           Load.resolveProject(global-plugins) took 70.5196ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\User1\.sbt\1.0\plugins, plugins: List(<none>))) took 137.0026ms
[debug] [Loading] Done in C:\Users\User1\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 188.2997ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2994ms
[debug]     Load.loadUnit(file:/C:/Users/User1/.sbt/1.0/plugins/, ...) took 385.3685ms
[debug]   Load.apply: load took 1107.0438ms
[debug]   Load.apply: resolveProjects took 8.281ms
[debug]   Load.apply: finalTransforms took 188.6087ms
[debug]   Load.apply: config.delegates took 21.2898ms
[debug]   Load.apply: Def.make(settings)... took 1647.9546ms
[debug]   Load.apply: structureIndex took 113.7644ms
[debug]   Load.apply: mkStreams took 1.5549ms
[info] loading global plugins from C:\Users\User1\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 5171.3886ms
[debug]           Load.loadUnit: plugins took 27.1683ms
[debug]           Load.loadUnit: defsScala took 0.0037ms
[debug] [Loading] Scanning directory C:\Users\User1\IdeaProjects\OS2 animator\project
[debug]             Load.loadUnit: mkEval took 6.0153ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\User1\IdeaProjects\OS2 animator\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.7226 ms
[info] loading settings for project os2-animator-build from idea.sbt ...
[debug]               Load.resolveProject(os2-animator-build) took 18.0265ms
[debug]             Load.loadTransitive: finalizeProject(Project(id os2-animator-build, base: C:\Users\User1\IdeaProjects\OS2 animator\project, plugins: List(<none>))) took 20.3533ms
[debug] [Loading] Done in C:\Users\User1\IdeaProjects\OS2 animator\project, returning: (os2-animator-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 3245.0546ms
[debug]           Load.loadUnit: cleanEvalClasses took 6.9507ms
[debug]         Load.loadUnit(file:/C:/Users/User1/IdeaProjects/OS2%20animator/project/, ...) took 3280.1412ms
[debug]       Load.apply: load took 3282.7647ms
[debug]       Load.apply: resolveProjects took 0.1284ms
[debug]       Load.apply: finalTransforms took 14.2804ms
[debug]       Load.apply: config.delegates took 0.3916ms
[debug]       Load.apply: Def.make(settings)... took 143.4381ms
[debug]       Load.apply: structureIndex took 97.3579ms
[debug]       Load.apply: mkStreams took 0.0025ms
[info] loading project definition from C:\Users\User1\IdeaProjects\OS2 animator\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 5631.0897ms
[debug]     Load.loadUnit: defsScala took 0.0029ms
[debug] [Loading] Scanning directory C:\Users\User1\IdeaProjects\OS2 animator
[debug]       Load.loadUnit: mkEval took 0.3147ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\User1\IdeaProjects\OS2 animator, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.7732 ms
[info] loading settings for project os2-animator from build.sbt ...
[debug]         Load.resolveProject(os2-animator) took 23.0571ms
[debug]       Load.loadTransitive: finalizeProject(Project(id os2-animator, base: C:\Users\User1\IdeaProjects\OS2 animator, plugins: List(<none>))) took 25.921ms
[debug] [Loading] Done in C:\Users\User1\IdeaProjects\OS2 animator, returning: (os2-animator)
[debug]     Load.loadUnit: loadedProjectsRaw took 3059.2462ms
[debug]     Load.loadUnit: cleanEvalClasses took 27.7609ms
[debug]   Load.loadUnit(file:/C:/Users/User1/IdeaProjects/OS2%20animator/, ...) took 8719.0257ms
[debug] Load.apply: load took 8721.3341ms
[debug] Load.apply: resolveProjects took 0.0899ms
[debug] Load.apply: finalTransforms took 22.7869ms
[debug] Load.apply: config.delegates took 0.2861ms
[debug] Load.apply: Def.make(settings)... took 84.6656ms
[debug] Load.apply: structureIndex took 37.4311ms
[debug] Load.apply: mkStreams took 0.0023ms
[info] set current project to OS2 animator (in build file:/C:/Users/User1/IdeaProjects/OS2%20animator/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 51591 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 51591, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to OS2 animator (in build file:/C:/Users/User1/IdeaProjects/OS2%20animator/)
[debug] > Exec(idea-shell, None, None)
